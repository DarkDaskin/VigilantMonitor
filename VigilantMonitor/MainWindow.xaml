<rxui:ReactiveWindow
  x:Class="VigilantMonitor.MainWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:local="clr-namespace:VigilantMonitor"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:rxui="http://reactiveui.net"
  xmlns:tb="http://www.hardcodet.net/taskbar"
  Title="{Binding Title, Mode=OneTime}"
  Width="500"
  Height="200"
  d:DataContext="{d:DesignInstance local:MainViewModelDesignTime,
                                   IsDesignTimeCreatable=True}"
  x:TypeArguments="local:MainViewModel"
  Closing="MainWindow_OnClosing"
  Icon="icon.ico"
  Visibility="{Binding WindowVisibility, Mode=TwoWay, FallbackValue=Hidden}"
  WindowStartupLocation="CenterScreen"
  mc:Ignorable="d">

  <FrameworkElement.Resources>
    <ControlTemplate x:Key="ValidationTemplate">
      <DockPanel>
        <TextBlock
          Margin="4,0"
          DockPanel.Dock="Right"
          Foreground="Red"
          Text="{Binding ElementName=Placeholder, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" />
        <Border Name="Border" BorderBrush="Red">
          <AdornedElementPlaceholder Name="Placeholder" />
        </Border>
      </DockPanel>
      <ControlTemplate.Triggers>
        <DataTrigger Binding="{Binding ElementName=Placeholder, Path=AdornedElement.(Validation.HasError)}" Value="True">
          <Setter TargetName="Border" Property="BorderThickness" Value="1" />
        </DataTrigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="CheckBox">
      <Setter Property="Margin" Value="4" />
    </Style>
    <Style TargetType="TextBlock">
      <Setter Property="Margin" Value="4" />
    </Style>
    <Style TargetType="TextBox">
      <Setter Property="Margin" Value="4" />
      <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTemplate}" />
    </Style>
  </FrameworkElement.Resources>

  <FrameworkElement.InputBindings>
    <KeyBinding Key="Escape" Command="{Binding HideSettingsCommand}" />
  </FrameworkElement.InputBindings>

  <Grid Margin="4">
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="Auto" />
      <!--<ColumnDefinition Width="Auto" />-->
      <ColumnDefinition />
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>

    <tb:TaskbarIcon
      DoubleClickCommand="{Binding ShowSettingsCommand}"
      IconSource="icon.ico"
      ToolTipText="{Binding Title, Mode=OneTime}">
      <FrameworkElement.ContextMenu>
        <ContextMenu>
          <MenuItem
            Command="{Binding ShowSettingsCommand}"
            FontWeight="Bold"
            Header="Settings..." />
          <Separator />
          <MenuItem
            Header="Enable"
            IsCheckable="True"
            IsChecked="{Binding IsEnabled}" />
          <Separator />
          <MenuItem Command="{Binding ExitCommand}" Header="Exit" />
        </ContextMenu>
      </FrameworkElement.ContextMenu>
    </tb:TaskbarIcon>

    <CheckBox
      Grid.Row="0"
      Grid.Column="0"
      Margin="4"
      Content="Enable"
      IsChecked="{Binding IsEnabled}" />

    <TextBlock
      Grid.Row="1"
      Grid.Column="0"
      Text="Minimal sound duration (s):" />

    <TextBox
      Name="MinDurationText"
      Grid.Row="1"
      Grid.Column="1"
      Width="50"
      HorizontalAlignment="Left"
      Text="{Binding MinDuration, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" />

    <CheckBox
      Grid.Row="2"
      Grid.Column="0"
      Margin="4"
      Content="Run at Windows startup"
      IsChecked="{Binding RunAtWindowsStartup}" />

    <Button
      Grid.Row="4"
      Grid.Column="0"
      Grid.ColumnSpan="2"
      Width="80"
      HorizontalAlignment="Left"
      Command="{Binding ExitCommand}"
      Content="Exit" />

    <Button
      Grid.Row="4"
      Grid.Column="0"
      Grid.ColumnSpan="2"
      Width="80"
      HorizontalAlignment="Right"
      Command="{Binding HideSettingsCommand}"
      Content="OK" />
  </Grid>
</rxui:ReactiveWindow>
